{"version":3,"file":"index.cjs.js","sources":["../src/components/alerts/Alerts.tsx","../src/components/button/Button.tsx","../src/components/card/Card.tsx","../src/components/checkbox/Checkbox.tsx","../src/components/selectbox/SelectItem.tsx","../src/components/common/unversalIcon/UniversalIcon.tsx","../src/components/selectbox/Selectbox.tsx","../src/components/header/Header.tsx","../src/components/input/Input.tsx","../src/components/radio/Radio.tsx","../src/components/reCaptcha/ReCaptcha.tsx","../src/components/textArea/TextArea.tsx","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-GB/_lib/formatLong.js","../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-GB.js","../src/components/datePicker/Calendar.tsx","../src/components/datePicker/DatePicker.tsx","../src/components/tabs/Tabs.tsx","../src/components/pagination/paginationTypes.ts","../src/components/pagination/buttonsGroup/PrevButton.tsx","../src/components/pagination/buttonsGroup/NextButton.tsx","../src/components/pagination/buttonsGroup/PageButton.tsx","../src/components/pagination/buttonsGroup/Dots.tsx","../src/components/pagination/buttonsGroup/MainPaginationButtons.tsx","../src/components/pagination/usePagination.ts","../src/components/pagination/PerPageSelect.tsx","../src/components/pagination/Pagination.tsx"],"sourcesContent":["import { ComponentProps, FC, ReactNode, useEffect } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './alerts.module.scss'\r\n\r\nimport { UniversalIcon } from '@/components'\r\n\r\nexport type AlertProps = {\r\n  /**\r\n   * **Required**: The content of the alert (usually text or elements).\r\n   */\r\n  children: ReactNode\r\n  /**\r\n   * Visual variant of the alert. Can be 'success' (green) or 'error' (red).\r\n   * Defaults to no variant styling.\r\n   */\r\n  variant?: 'success' | 'error'\r\n  /**\r\n   * Callback fired when the close button is clicked.\r\n   */\r\n  onClose: () => void\r\n  /**\r\n   * **Required**: If true, the alert can be closed via a close button.\r\n   */\r\n  withCloseIcon?: boolean\r\n  /**\r\n   * If true, the alert stretches to the full width of its container.\r\n   */\r\n  fullWidth?: boolean\r\n  isOpen: boolean\r\n} & ComponentProps<'div'>\r\n\r\nexport const Alert: FC<AlertProps> = ({\r\n  children,\r\n  variant = 'success',\r\n  onClose,\r\n  withCloseIcon = true,\r\n  fullWidth = false,\r\n  isOpen = false,\r\n  ...rest\r\n}) => {\r\n  const classNames = {\r\n    box: clsx(s.box, variant === 'success' ? s.success : s.error, fullWidth && s.fullWidth),\r\n    content: s.content,\r\n    icon: clsx(s.icon),\r\n  }\r\n  useEffect(() => {\r\n    let timerId: any\r\n    if (isOpen) {\r\n      timerId = setTimeout(onClose, 5000)\r\n    }\r\n\r\n    return () => clearTimeout(timerId)\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <div className={classNames.box} {...rest} data-isopen={isOpen}>\r\n      <div className={classNames.content}>\r\n        {variant === 'error' ? (\r\n          <div>\r\n            <strong>Error!</strong> {children}\r\n          </div>\r\n        ) : (\r\n          <>{children}</>\r\n        )}\r\n        {withCloseIcon && (\r\n          <span className={classNames.icon} onClick={onClose}>\r\n            <UniversalIcon name={'close'} />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ComponentPropsWithoutRef, ElementType, ReactNode } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './button.module.scss'\r\n\r\nexport const buttonVariant = ['primary', 'secondary', 'outline', 'text_button'] as const\r\nexport type ButtonVariant = (typeof buttonVariant)[number]\r\n\r\nexport type ButtonOwnProps<T extends ElementType = 'button'> = {\r\n  /**  * The element or component to render as. For example, 'button', 'a' etc. Default = 'button */\r\n  as?: T\r\n  /**  * Makes the button take up the full width of its container. */\r\n  fullWidth?: boolean\r\n  /**  * Visual style variant of the button.*/\r\n  variant?: ButtonVariant\r\n  /**  * Disables the button.*/\r\n  disabled?: boolean\r\n  /**  **Required**: Button content.*/\r\n  children: ReactNode\r\n}\r\n\r\nexport type ButtonProps<T extends ElementType = 'button'> = ButtonOwnProps<T> &\r\n  Omit<ComponentPropsWithoutRef<T>, keyof ButtonOwnProps<T>>\r\n\r\nexport const Button = <T extends ElementType = 'button'>({\r\n  as,\r\n  children,\r\n  fullWidth = false,\r\n  className,\r\n  variant = 'primary',\r\n  ...rest\r\n}: ButtonProps<T>) => {\r\n  const classNames = clsx(s.button, s[variant], fullWidth && s.fullWidth, className)\r\n  const Component = (as || 'button') as ElementType\r\n\r\n  return (\r\n    <Component className={classNames} {...rest}>\r\n      {children}\r\n    </Component>\r\n  )\r\n}\r\n","import { ReactNode } from 'react';\r\n\r\nimport { clsx } from 'clsx';\r\n\r\nimport styles from './card.module.scss';\r\n\r\ntype cardSize = 'sm' | 'md' | 'lg';\r\n\r\ntype Props = {\r\n  /**\r\n   * Controls the card's padding and font scaling.\r\n   * @default 'md'\r\n   */\r\n  size?: cardSize;\r\n  /**\r\n   * Content to render inside the card.\r\n   * Accepts strings, JSX, arrays, etc.\r\n   */\r\n  children?: ReactNode;\r\n  /**\r\n   * When `true`, forces the card to occupy 100% of its parent's width.\r\n   * @default false\r\n   */\r\n  fullWidth?: boolean;\r\n};\r\n\r\nexport const Card = ({ children, fullWidth, size = 'md' }: Props) => {\r\n  const classNames = clsx(styles.cardBody, fullWidth && styles.fullWidth);\r\n\r\n  return (\r\n    <div className={classNames} data-cardsize={size}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import {ComponentPropsWithoutRef, ReactNode} from 'react'\r\n\r\nimport { CheckIcon } from '@radix-ui/react-icons'\r\nimport { Checkbox as RadixCheckbox } from 'radix-ui'\r\n\r\nimport s from './checkbox.module.scss'\r\n\r\ntype CheckboxProps = {\r\n  /** **Required**: Unique identifier for the checkbox */\r\n  idProp: string\r\n  /** Label displayed next to the checkbox */\r\n  label?: ReactNode\r\n  /** Additional class name for styling */\r\n  className?: string\r\n  /** Disables the checkbox */\r\n  disabled?: boolean\r\n  /** Controls the checked state (if controlled externally) */\r\n  checked?: boolean\r\n} & ComponentPropsWithoutRef<typeof RadixCheckbox.Root>\r\n\r\nexport const Checkbox = ({ label, idProp, className, disabled, ...props }: CheckboxProps) => (\r\n  <div style={{ display: 'flex', alignItems: 'center' }}>\r\n    <RadixCheckbox.Root\r\n      className={s.Root}\r\n      defaultChecked\r\n      id={idProp}\r\n      aria-disabled={disabled}\r\n      {...props}\r\n    >\r\n      <RadixCheckbox.Indicator className={s.Indicator} aria-disabled={disabled}>\r\n        <CheckIcon />\r\n      </RadixCheckbox.Indicator>\r\n    </RadixCheckbox.Root>\r\n    <label className={s.Label} htmlFor={idProp} aria-disabled={disabled}>\r\n      {label}\r\n    </label>\r\n  </div>\r\n)\r\n","import * as React from 'react'\r\nimport { ComponentPropsWithoutRef, ElementRef, ForwardedRef } from 'react'\r\n\r\nimport clsx from 'clsx'\r\nimport { Select } from 'radix-ui'\r\n\r\nimport s from './selectbox.module.scss'\r\n\r\ntype SelectItemProps = {\r\n  value: string\r\n  variant?: 'default' | 'pagination'\r\n  children: React.ReactNode\r\n} & ComponentPropsWithoutRef<typeof Select.Item>\r\n\r\nexport const SelectItem = React.forwardRef<ElementRef<typeof Select.Item>, SelectItemProps>(\r\n  (\r\n    { children, variant, className, ...props }: SelectItemProps,\r\n    forwardedRef: ForwardedRef<ElementRef<typeof Select.Item>>\r\n  ): React.ReactElement => {\r\n    return (\r\n      <Select.Item className={clsx(s[`${variant}`], s.Item, className)} {...props} ref={forwardedRef}>\r\n        <Select.ItemText className={s.ItemContent}>{children}</Select.ItemText>\r\n      </Select.Item>\r\n    )\r\n  }\r\n)\r\n","import React from 'react'\r\n\r\nimport parse, { domToReact, HTMLReactParserOptions, Element, DOMNode } from 'html-react-parser'\r\n\r\ntype Props = {\r\n  name: string\r\n  dataStatic?: boolean\r\n  width?: string\r\n  height?: string\r\n  size?: number\r\n  className?: string\r\n}\r\n\r\nexport const UniversalIcon = ({\r\n  name,\r\n  dataStatic = false,\r\n  width = '24px',\r\n  height = '24px',\r\n  size,\r\n  className,\r\n  ...rest\r\n}: Props) => {\r\n  const [svgElement, setSvgElement] = React.useState<React.ReactNode>(null)\r\n\r\n  React.useEffect(() => {\r\n    fetch(`/assets/icons/${name}.svg`)\r\n      .then(res => res.text())\r\n      .then(svgString => {\r\n        const options: HTMLReactParserOptions = {\r\n          replace: domNode => {\r\n            if (domNode.type === 'tag' && (domNode as Element).name === 'svg') {\r\n              const el = domNode as Element\r\n\r\n              const attribs: Record<string, any> = {\r\n                ...el.attribs,\r\n                ...(dataStatic ? { 'data-static': 'true' } : { 'data-static': 'false' }),\r\n                width: width,\r\n                height: height,\r\n                size: size,\r\n                className: className,\r\n                ...rest,\r\n              }\r\n\r\n              // Правильно преобразуем XML-атрибуты\r\n              if ('xmlnsxlink' in el.attribs) {\r\n                attribs.xmlnsXlink = el.attribs.xmlnsxlink\r\n                delete attribs.xmlnsxlink\r\n              }\r\n\r\n              // Преобразуем xlink:href в xlinkHref\r\n              if ('xlink:href' in el.attribs) {\r\n                attribs.xlinkHref = el.attribs['xlink:href']\r\n                delete attribs['xlink:href']\r\n              }\r\n\r\n              Object.keys(el.attribs).forEach(key => {\r\n                if (key.includes(':')) {\r\n                  const reactKey = key.replace(/:([a-z])/g, (_, letter) => letter.toUpperCase())\r\n                  attribs[reactKey] = el.attribs[key]\r\n                  delete attribs[key]\r\n                }\r\n              })\r\n\r\n              return <svg {...attribs}>{domToReact(el.children as DOMNode[], options)}</svg>\r\n            }\r\n          },\r\n        }\r\n\r\n        const parsed = parse(svgString, options)\r\n        setSvgElement(parsed)\r\n      })\r\n  }, [name, dataStatic])\r\n\r\n  return svgElement\r\n}\r\n","import { ComponentPropsWithoutRef, FC } from 'react'\r\n\r\nimport { ChevronDownIcon } from '@radix-ui/react-icons'\r\nimport { Select } from 'radix-ui'\r\n\r\nimport '../../styles/index.scss'\r\n\r\nimport s from './selectbox.module.scss'\r\n\r\nimport { SelectItem } from './SelectItem'\r\nimport { UniversalIcon } from '../common/unversalIcon/UniversalIcon'\r\nimport { clsx } from 'clsx'\r\n\r\ntype LanguageType = 'rus' | 'eng'\r\n\r\ntype OptionType = {\r\n  value: LanguageType | string | number\r\n  label: string\r\n  icon?: string\r\n}\r\n\r\ntype SelectboxProps = {\r\n  /** **Required**: Unique ID for the Select. Trigger and associated label */\r\n  idProp?: string\r\n  /** **Required**: Name attribute for the form (useful when submitting forms) */\r\n  name?: string\r\n  /** **Required**: Array of options to choose from, each with a label (display text) and value */\r\n  options: OptionType[]\r\n  /** Placeholder text shown when no option is selected */\r\n  placeholder?: string\r\n  /** Initial value */\r\n  value?: string | number\r\n  variant?: 'default' | 'pagination'\r\n  /** Label displayed above the select input */\r\n  label?: string\r\n  /** Disables the select input */\r\n  disabled?: boolean\r\n  /** Additional CSS class names for the root element */\r\n  className?: string\r\n  /** If true, the select input stretches to the full width of its container */\r\n  fullWidth?: boolean\r\n  /** Callback fired when the selected value changes */\r\n  onValueChange?: (value: string) => void\r\n  /** Callback fired when the dropdown opens or closes */\r\n  onOpenChange?: (open: boolean) => void\r\n} & Omit<ComponentPropsWithoutRef<typeof Select.Root>, 'value' | 'onValueChange' | 'children'>\r\n\r\nexport const Selectbox: FC<SelectboxProps> = ({\r\n  idProp,\r\n  name,\r\n  label = '',\r\n  placeholder = 'Select...',\r\n  disabled = false,\r\n  className,\r\n  value,\r\n  fullWidth,\r\n  onValueChange,\r\n  onOpenChange,\r\n  options,\r\n  variant = 'default',\r\n  ...rest\r\n}: SelectboxProps) => {\r\n  const selectedOption: OptionType | undefined = options.find(opt => opt.value === value)\r\n\r\n  return (\r\n    <Select.Root onValueChange={onValueChange} onOpenChange={onOpenChange} {...rest}>\r\n      {label && (\r\n        <label htmlFor={idProp} className={s.Label}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <Select.Trigger\r\n        id={idProp}\r\n        className={clsx(s[`${variant}`], s.Trigger, fullWidth && s.fullWidth)}\r\n        disabled={disabled}\r\n        aria-label={label}\r\n        data-label={label ? 'true' : 'false'}\r\n        name={name}\r\n      >\r\n        {selectedOption ? (\r\n          <div className={s.Selected}>\r\n            {selectedOption.icon && (\r\n              <span className={s.IconWrapper}>\r\n                <UniversalIcon name={selectedOption.icon} />\r\n              </span>\r\n            )}\r\n            {selectedOption.label}\r\n          </div>\r\n        ) : (\r\n          <Select.Value placeholder={placeholder} />\r\n        )}\r\n        <Select.Icon className={s.Icon}>\r\n          <ChevronDownIcon />\r\n        </Select.Icon>\r\n      </Select.Trigger>\r\n\r\n      <Select.Portal>\r\n        <Select.Content\r\n          className={clsx(s[`${variant}`], s.Content)}\r\n          side={'bottom'}\r\n          position={'popper'}\r\n        >\r\n          <Select.Viewport className={s.Viewport}>\r\n            <Select.Group>\r\n              {options.map(option => (\r\n                <SelectItem\r\n                  className={s.Selected}\r\n                  key={option.value}\r\n                  variant={variant}\r\n                  value={option.value.toString()}\r\n                >\r\n                  {option.icon && (\r\n                    <span>\r\n                      <UniversalIcon name={option.icon} />\r\n                    </span>\r\n                  )}\r\n                  {option.label}\r\n                </SelectItem>\r\n              ))}\r\n            </Select.Group>\r\n          </Select.Viewport>\r\n        </Select.Content>\r\n      </Select.Portal>\r\n    </Select.Root>\r\n  )\r\n}\r\n","import {Selectbox} from \"../selectbox\";\r\nimport {UniversalIcon} from \"../common/unversalIcon/UniversalIcon\";\r\nimport {Button} from \"../button\";\r\n\r\nimport '../../styles/index.scss'\r\nimport s from './header.module.scss'\r\n\r\ntype Props = {\r\n  /** **Required**: Indicates if the user is authenticated */\r\n  isAuth: boolean,\r\n  /** Indicates if the user is authenticated */\r\n  isProcessingAuth?: boolean,\r\n  /** **Required**: Current selected localization value */\r\n  localization: string,\r\n  /** Optional number of notifications to display. If not provided, defaults to 0 */\r\n  notificationCount?: number,\r\n}\r\n\r\nexport const Header = ({\r\n                         isAuth,\r\n                         isProcessingAuth = false,\r\n                         localization,\r\n                         notificationCount = 0\r\n                       }: Props) => {\r\n  const convertNumber = (notificationCount: number): string => {\r\n    return notificationCount > 9 ? `9+` : `${notificationCount}`\r\n  }\r\n\r\n  return (\r\n    <header className={s.Header}>\r\n      <div>\r\n          <span className={s.Logo}>\r\n            Inctagram\r\n          </span>\r\n      </div>\r\n      <div className={s.Content}>\r\n        {isAuth && (\r\n          <div className={s.IconWrapper} data-notificationcount={convertNumber(notificationCount)}>\r\n            <UniversalIcon name={'outline-bell'}/>\r\n          </div>\r\n        )}\r\n        <Selectbox value={localization} name={'aaa'}\r\n                   options={[\r\n                     {label: 'Russian', value: 'rus', icon: 'Flag-Russia'},\r\n                     {label: 'English', value: 'eng', icon: 'Flag-United-Kingdom'}\r\n                   ]}\r\n                   idProp={localization}\r\n        />\r\n        {!isAuth && !isProcessingAuth && (\r\n          <>\r\n            <Button variant='text_button'>Sign in</Button>\r\n            <Button variant='primary'>Sign up</Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import { InputHTMLAttributes, useState } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './input.module.scss'\r\n\r\nimport { UniversalIcon } from '@/components'\r\n\r\ntype InputVariant = 'search' | 'email' | 'password' | 'text'  | 'location'\r\n\r\ntype InputProps = InputHTMLAttributes<HTMLInputElement> & {\r\n  /** Defines the visual style of the input (e.g., \"search\", \"password\", \"text\"). */\r\n  inputType: InputVariant\r\n  /**  Optional label text displayed above the input field. */\r\n  label?: string\r\n  /** Error message displayed below the input when error is true. */\r\n  errorText?: string\r\n  /** \tIf true, the input spans 100% of its container width. */\r\n  fullWidth?: boolean\r\n}\r\n\r\nexport const Input = ({\r\n  id,\r\n  label,\r\n  inputType,\r\n  errorText,\r\n  disabled = false,\r\n  fullWidth = false,\r\n  required,\r\n  ...rest\r\n}: InputProps) => {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const containerClassNames = clsx(s.inputContainer, errorText && s.error, fullWidth && s.fullWidth)\r\n\r\n  const isPassword = inputType === 'password'\r\n  const isSearch = inputType === 'search'\r\n  const isLocation = inputType === 'location'\r\n\r\n  const currentInputType = (variants: InputVariant) => {\r\n    if (isPassword) {\r\n      return showPassword ? 'text' : 'password'\r\n    } else {\r\n      return variants\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      {label && (\r\n        <label\r\n          data-requiredfield={required}\r\n          htmlFor={id}\r\n          className={s.label}\r\n          data-disabled={disabled}\r\n        >\r\n          {label}\r\n        </label>\r\n      )}\r\n      <div className={containerClassNames} data-disabled={disabled}>\r\n        {isSearch && (\r\n          <button type={'submit'} className={s.iconButton} data-disabled={disabled}>\r\n            <UniversalIcon name={'google'} />\r\n          </button>\r\n        )}\r\n        <input\r\n          id={id}\r\n          type={currentInputType(inputType)}\r\n          required={required}\r\n          className={s.input}\r\n          autoComplete={'off'}\r\n          {...rest}\r\n        />\r\n        {isLocation && (\r\n          <button type={'submit'} className={s.iconButton} data-disabled={disabled}>\r\n            <UniversalIcon name={'pin-outline'} />\r\n          </button>\r\n        )}\r\n\r\n        {isPassword && (\r\n          <button\r\n            type={'button'}\r\n            className={s.iconButton}\r\n            onClick={() => setShowPassword(!showPassword)}\r\n          >\r\n            {showPassword ? (\r\n              <UniversalIcon name={'eye-outline'} />\r\n            ) : (\r\n              <UniversalIcon name={'eye-off-outline'} />\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {errorText && (\r\n        <span className={s.errorText} data-errortext={!!errorText}>\r\n          {errorText}\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { ComponentProps, InputHTMLAttributes, ReactElement } from 'react'\r\n\r\nimport { RadioGroup } from 'radix-ui'\r\n\r\nimport styles from './radio.module.scss'\r\n\r\nexport type RadioOptionsType = {\r\n  id: string\r\n  radioName: string\r\n}\r\n\r\ntype Props = ComponentProps<typeof RadioGroup.Root> &\r\n  InputHTMLAttributes<HTMLInputElement> & {\r\n    /** **Required**:Array of radio button options*/\r\n    options: RadioOptionsType[]\r\n    /** Disables all radio buttons */\r\n    selectedOption?: string\r\n  }\r\n\r\nexport const Radio = ({ options, defaultValue, disabled, ...rest }: Props): ReactElement => (\r\n  <RadioGroup.Root\r\n    className={styles.Root}\r\n    defaultValue={'default'}\r\n    aria-label={'View density'}\r\n    {...rest}\r\n  >\r\n    {options?.length &&\r\n      options.map(option => (\r\n        <div\r\n          className={disabled ? styles.disabled : ''}\r\n          style={{ display: 'flex', alignItems: 'center' }}\r\n          key={option.id}\r\n        >\r\n          <RadioGroup.Item className={styles.Item} value={option.radioName} id={option.id}>\r\n            <RadioGroup.Indicator className={styles.Indicator} />\r\n          </RadioGroup.Item>\r\n          <label className={styles.Label} htmlFor={option.id}>\r\n            {option.radioName}\r\n          </label>\r\n        </div>\r\n      ))}\r\n  </RadioGroup.Root>\r\n)\r\n","import { ReactElement } from 'react'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport styles from './ReCaptcha.module.scss'\r\n\r\ntype Props = {\r\n  /** **Required**: Tracks if captcha verification was completed successfully */\r\n  isCaptchaPassed: boolean\r\n  /** **Required**: Callback that receives the verification token string */\r\n  setCaptchaToken: (token: string) => void\r\n  siteKey: string\r\n}\r\n\r\n/**\r\n * ReCaptcha component that integrates Google reCAPTCHA v2\r\n * @component\r\n * @param {Object} props - Component props\r\n * @param {boolean} props.isCaptchaPassed - Flag indicating if captcha was successfully passed\r\n * @param {function(string): void} props.setCaptchaToken - Callback function to set the captcha token\r\n * @returns {JSX.Element} - Rendered reCAPTCHA component\r\n *\r\n * @example\r\n * // Basic usage\r\n * <ReCaptcha\r\n *   isCaptchaPassed={isVerified}\r\n *   setCaptchaToken={(token) => setToken(token)}\r\n * />\r\n */\r\n\r\nexport const ReCaptcha = ({ isCaptchaPassed, setCaptchaToken, siteKey, ...rest }: Props): ReactElement => {\r\n  const submitHandler = (token: string | null) => {\r\n    if (isCaptchaPassed && token) {\r\n      setCaptchaToken(token)\r\n    }\r\n  }\r\n\r\n  const classNames = clsx(styles.reCaptchaWrapper, !isCaptchaPassed && styles.reCaptchaError)\r\n\r\n  return (\r\n    <div className={classNames}>\r\n      <ReCAPTCHA\r\n        sitekey={siteKey}\r\n        onChange={submitHandler}\r\n        theme={'dark'}\r\n        {...rest}\r\n      />\r\n      {!isCaptchaPassed && (\r\n        <span className={styles.reCaptchaText}>Please verify that you are not a robot</span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { ComponentPropsWithoutRef, ElementType } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './textArea.module.scss'\r\n\r\nexport const textAreaVariant = ['default']\r\n\r\nexport type TextAreaVariant = (typeof textAreaVariant)[number]\r\n\r\nexport type TextAreaProps<T extends ElementType = 'textarea'> = {\r\n  /**\r\n   * Custom component or HTML element to render instead of the default 'textarea'.\r\n   * Useful for styling or using a wrapper component.\r\n   */\r\n  as?: T\r\n  /**\r\n   * Visual style variant for the TextArea (e.g. 'default', etc.).\r\n   */\r\n  variant?: TextAreaVariant\r\n  /**\r\n   * Label text displayed above the TextArea.\r\n   */\r\n  label?: string\r\n  /**\r\n   * If true, displays the component in an error state.\r\n   */\r\n  error?: boolean\r\n  /**\r\n   * Error message shown below the TextArea when `error` is true.\r\n   */\r\n  errorText?: string\r\n  /**\r\n   * If true, makes the TextArea take up the full width of its container.\r\n   */\r\n  fullWidth?: boolean\r\n  /**\r\n   * **Required**: ID for Text area.\r\n   */\r\n  id: string\r\n  asChild?: boolean\r\n} & ComponentPropsWithoutRef<T>\r\n\r\nexport const TextAreaComponent = <T extends ElementType = 'textarea'>(props: TextAreaProps<T>) => {\r\n  const {\r\n    className,\r\n    variant = 'default',\r\n    label,\r\n    error,\r\n    errorText,\r\n    disabled = false,\r\n    fullWidth = false,\r\n    id,\r\n    ...rest\r\n  } = props\r\n\r\n  const classNames = clsx(\r\n    s.textArea,\r\n    error ? s.error : s[variant],\r\n    disabled && s.disabled,\r\n    fullWidth && s.fullWidth,\r\n    className\r\n  )\r\n\r\n  return (\r\n    <div className={s.bodyTextArea}>\r\n      {label && (\r\n        <label className={s.label} htmlFor={id}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <textarea className={classNames} disabled={disabled} id={id} {...rest} />\r\n      {error && errorText && <div className={s.errorText}>{errorText}</div>}\r\n    </div>\r\n  )\r\n}\r\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-GB/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author Alex [@glintik](https://github.com/glintik)\n */\nexport const enGB = {\n  code: \"en-GB\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enGB;\n","import { DayPicker, type DateRange } from 'react-day-picker'\r\nimport 'react-day-picker/dist/style.css'\r\nimport s from './datePicker.module.scss'\r\nimport { enGB } from 'date-fns/locale'\r\n\r\ntype CalendarProps = {\r\n  value?: DateRange | undefined\r\n  onChange?: (range: DateRange | undefined) => void\r\n}\r\n\r\nexport const Calendar = ({ value, onChange, ...rest }: CalendarProps) => {\r\n  const modifiers = {\r\n    weekend: (date: Date) => [0, 6].includes(date.getDay()),\r\n  }\r\n\r\n  return (\r\n    <DayPicker\r\n      className={s.datePicker__calendar}\r\n      classNames={{\r\n        caption_label: s.captionLabel,\r\n        day: s.day,\r\n        weekdays: s.weekdays,\r\n        weekday: s.weekday,\r\n        nav_button: s.navButton,\r\n        chevron: s.chevron,\r\n      }}\r\n      modifiersClassNames={{\r\n        selected: s.selected,\r\n        today: s.today,\r\n        weekend: s.weekend,\r\n        range_start: s.rangeStart,\r\n        range_end: s.rangeEnd,\r\n      }}\r\n      modifiers={modifiers}\r\n      locale={enGB}\r\n      animate\r\n      fixedWeeks\r\n      showOutsideDays\r\n      mode=\"range\"\r\n      selected={value}\r\n      onSelect={onChange}\r\n      required\r\n      // disabled={{ before: new Date() }}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n","import { format } from 'date-fns'\r\nimport { UniversalIcon } from '@/components'\r\nimport s from './datePicker.module.scss'\r\nimport { Calendar } from './Calendar'\r\nimport { Popover } from 'radix-ui'\r\nimport { useState } from 'react'\r\nimport { DateRange } from 'react-day-picker'\r\n\r\ntype Props = {\r\n  /** Initial value */\r\n  value: DateRange | undefined\r\n  /** Label displayed above the select input */\r\n  label: string\r\n  /** Callback called when a date is selected */\r\n  onChange?: (range: DateRange | undefined) => void\r\n  /** Disables the select input */\r\n  disabled?: boolean\r\n  /** Shows the error status */\r\n  hasError?: boolean\r\n  /** Shows the error status Error message under the component if `hasError` = true */\r\n  errorText?: string\r\n  /** If true, the input to the full width of its container */\r\n  fullWidth?: boolean\r\n}\r\n\r\nexport const DatePicker = ({\r\n  value,\r\n  label,\r\n  onChange,\r\n  hasError,\r\n  errorText,\r\n  disabled = false,\r\n  fullWidth = false,\r\n}: Props) => {\r\n  const inputId = 'datepicker-trigger'\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const getDisplayValue = (range?: DateRange) => {\r\n    if (!range?.from) return format(new Date(), 'dd/MM/yyyy')\r\n    if (!range.to || range.from.getTime() === range.to.getTime()) {\r\n      return format(range.from, 'dd/MM/yyyy')\r\n    }\r\n    return `${format(range.from, 'dd/MM/yyyy')} - ${format(range.to, 'dd/MM/yyyy')}`\r\n  }\r\n\r\n  const triggerClass = [\r\n    s.datePicker__trigger,\r\n    fullWidth && s.fullWidth,\r\n    disabled && s.disabled,\r\n    hasError && s['datePicker__trigger--error'],\r\n    open && s['datePicker__trigger--open'],\r\n    disabled && s['datePicker__trigger--disabled'],\r\n  ]\r\n    .filter(Boolean)\r\n    .join(' ')\r\n\r\n  return (\r\n    <div className={s.datePicker}>\r\n      <label htmlFor={inputId} className={s.datePicker__label}>\r\n        {label}\r\n      </label>\r\n      <Popover.Root open={open} onOpenChange={setOpen}>\r\n        <Popover.Trigger\r\n          onClick={() => setOpen(!open)}\r\n          id={inputId}\r\n          className={triggerClass}\r\n          disabled={disabled}\r\n          aria-label={label}\r\n          aria-invalid={hasError || undefined}\r\n          aria-describedby={hasError && errorText ? `${inputId}-error` : undefined}\r\n        >\r\n          <span className={s.datePicker__dateValue}>{getDisplayValue(value)}</span>\r\n          <div className={s.datePicker__icon}>\r\n            {open ? (\r\n              <UniversalIcon name={'calendar'} />\r\n            ) : (\r\n              <UniversalIcon name={'calendar-outline'} />\r\n            )}\r\n          </div>\r\n        </Popover.Trigger>\r\n\r\n        <Popover.Content\r\n          className={s.datePicker__popover}\r\n          sideOffset={1}\r\n          align=\"start\"\r\n          side=\"bottom\"\r\n        >\r\n          <Calendar value={value} onChange={onChange} />\r\n        </Popover.Content>\r\n      </Popover.Root>\r\n\r\n      {hasError && errorText && (\r\n        <span id={`${inputId}-error`} className={s.datePicker__errorText} role=\"alert\">\r\n          {errorText}\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Tabs } from 'radix-ui'\r\nimport s from './tabs.module.scss'\r\nimport { clsx } from 'clsx'\r\nimport type { ReactNode } from 'react'\r\n\r\ntype Tab = {\r\n  /** id current tab (for example: \"tab1\") */\r\n  id: string\r\n  /**  The content of the tab   */\r\n  label: ReactNode\r\n  /** Disabled Tab */\r\n  disabled?: boolean\r\n}\r\n\r\ntype Props = {\r\n  tabs: Tab[]\r\n  /** id current tab (for example: \"tab1\") */\r\n  value: Tab['id']\r\n  /** Change active tab */\r\n  onValueChange: (val: Tab['id']) => void\r\n  /** * If true, the tab stretches to the full width of its container.  */\r\n  fullWidth?: boolean\r\n  /** any children, for example <Tabs.Content /> */\r\n  children?: ReactNode\r\n}\r\n\r\nexport const TabsComponent = ({\r\n  tabs,\r\n  value,\r\n  onValueChange,\r\n  fullWidth = false,\r\n  children,\r\n}: Props) => {\r\n  return (\r\n    <Tabs.Root value={value} onValueChange={onValueChange} className={s.root}>\r\n      <Tabs.List className={s.list}>\r\n        {tabs.map(({ id, label, disabled }) => (\r\n          <Tabs.Trigger\r\n            key={id}\r\n            value={id}\r\n            disabled={disabled}\r\n            className={clsx(s.trigger, fullWidth && s.fullWidth)}\r\n          >\r\n            {label}\r\n          </Tabs.Trigger>\r\n        ))}\r\n      </Tabs.List>\r\n      {tabs.map(({ id }) => (\r\n        <Tabs.Content key={id} value={id}>\r\n          {children}\r\n        </Tabs.Content>\r\n      ))}\r\n    </Tabs.Root>\r\n  )\r\n}\r\n","import {clsx} from \"clsx\";\r\nimport s from './pagination.module.scss'\r\n\r\ntype PaginationConditionals =\r\n    | {\r\n    onPerPageChange: (itemPerPage: number) => void\r\n    perPage: number\r\n    perPageOptions: number[]\r\n}\r\n    | {\r\n    onPerPageChange?: never\r\n    perPage?: null\r\n    perPageOptions?: never\r\n}\r\n\r\nexport type PaginationProps = {\r\n    count: number\r\n    onChange: (page: number) => void\r\n    onPerPageChange?: (itemPerPage: number) => void\r\n    page: number\r\n    perPage?: number\r\n    perPageOptions?: number[]\r\n    siblings?: number\r\n} & PaginationConditionals\r\n\r\nexport const classNames = {\r\n    container: s.container,\r\n    dots: s.dots,\r\n    icon: s.icon,\r\n    item: s.item,\r\n    pageButton(selected?: boolean) {\r\n        return clsx(this.item, selected && s.selected)\r\n    },\r\n    root: s.root,\r\n    select: s.select,\r\n    selectBox: s.selectBox,\r\n}\r\n\r\nexport type MainPaginationButtonsProps = {\r\n    currentPage: number\r\n    onClick: (pageNumber: number) => () => void\r\n    paginationRange: (number | string)[]\r\n}\r\n\r\nexport type NavigationButtonProps = {\r\n    disabled?: boolean\r\n    onClick: () => void\r\n    size?: number\r\n}\r\n\r\nexport type PageButtonProps = NavigationButtonProps & {\r\n    page: number\r\n    selected: boolean\r\n}\r\n\r\nexport type PerPageSelectProps = {\r\n    onPerPageChange: (itemPerPage: number) => void\r\n    perPage: number\r\n    perPageOptions: number[]\r\n}","import {FC} from \"react\";\r\nimport {UniversalIcon} from \"@/components\";\r\nimport {classNames, NavigationButtonProps} from \"@/components/pagination/paginationTypes\";\r\n\r\nexport const  PrevButton: FC<NavigationButtonProps> = ({disabled, onClick, size}) => {\r\n    return(\r\n        <button className={classNames.item} disabled={disabled} onClick={onClick}>\r\n            <UniversalIcon className={classNames.icon} name={'arrow-ios-back'} size={size}/>\r\n        </button>\r\n    )\r\n}","import {FC} from \"react\";\r\nimport {UniversalIcon} from \"@/components\";\r\nimport {classNames, NavigationButtonProps} from \"@/components/pagination/paginationTypes\";\r\n\r\nexport const NextButton:FC<NavigationButtonProps>= ({disabled, onClick, size}) => {\r\n    return (\r\n        <button className={classNames.item} disabled={disabled} onClick={onClick}>\r\n            <UniversalIcon className={classNames.icon} name={\"arrow-ios-forward\"} size={size}/>\r\n        </button>\r\n    )\r\n}","import {FC} from \"react\";\r\nimport {classNames, PageButtonProps} from \"@/components/pagination/paginationTypes\";\r\n\r\nexport const PageButton: FC<PageButtonProps> = ({disabled, onClick, page, selected}) => {\r\n    return (\r\n        <button className={\r\n                classNames.pageButton(selected)}\r\n                disabled={selected || disabled}\r\n                onClick={onClick}\r\n                type={\"button\"}\r\n        >\r\n            {page}\r\n        </button>\r\n    )\r\n};","import {FC} from \"react\";\r\nimport {classNames} from \"@/components/pagination/paginationTypes\";\r\n\r\nexport const Dots: FC = () => {\r\n    return (\r\n        <span className={classNames.dots}>&#8230;</span>\r\n    )\r\n}","import {FC} from \"react\";\r\nimport {MainPaginationButtonsProps} from \"@/components/pagination/paginationTypes\";\r\nimport {PageButton} from \"@/components/pagination/buttonsGroup/PageButton\";\r\nimport {Dots} from \"@/components/pagination/buttonsGroup/Dots\";\r\n\r\nexport const MainPaginationButtons: FC<MainPaginationButtonsProps> = ({ currentPage, onClick, paginationRange }) => {\r\n    return (\r\n        <>\r\n            {paginationRange.map((page: number | string, index) => {\r\n                const isSelected = page === currentPage\r\n                if (typeof page !== 'number') {\r\n                    return <Dots key={index} />\r\n                }\r\n                return <PageButton key={index} onClick={onClick(page)} page={page} selected={isSelected} />\r\n            })}\r\n        </>\r\n    )\r\n}","import {useCallback, useMemo} from \"react\";\r\n\r\n//создаёт массив чисел от start до end включительно.\r\nconst range = (start: number, end: number) => {\r\n    const length = end - start + 1\r\n\r\n    return Array.from({ length }, (_, idx) => idx + start)\r\n}\r\n\r\nconst DOTS = '...'\r\n\r\ntype UsePaginationParamType = {\r\n    count: number                           // всего страниц\r\n    onChange: (pageNumber: number) => void  // функция смены страницы\r\n    page: number                            // текущая страница\r\n    siblings?: number                       // сколько \"соседних\" страниц показывать рядом с текущей\r\n}\r\n\r\ntype PaginationRange = ('...' | number)[]\r\n\r\nexport const usePagination = ({ count, onChange, page, siblings = 1 }: UsePaginationParamType) => {\r\n    const paginationRange = useMemo(() => {\r\n\r\n        // Это максимум страниц, которые мы хотим отрисовать без сокращения (текущая, первый, последний, и по одному \"соседу\" с каждой стороны + 2 точки).\r\n        const totalPageNumbers = siblings + 5\r\n\r\n        //case 1: Если страниц мало (влезают все)\r\n        if (totalPageNumbers >= count) {\r\n            return range(1, count)\r\n        }\r\n\r\n        //Рассчитайте левый и правый индексы родственных элементов и убедитесь, что они находятся в пределах диапазона 1 и totalPageCount.\r\n        const leftSiblingIndex = Math.max(page - siblings, 1)\r\n        const rightSiblingIndex = Math.min(page + siblings, count)\r\n\r\n        // Мы не отображаем точки, когда нужно вставить только один номер страницы\r\n        // между крайними значениями одноуровневых элементов и ограничениями количества страниц, то есть 1 и totalPageCount.\r\n        // Поэтому мы используем leftSiblingIndex > 2 и rightSiblingIndex < totalPageCount - 2.\r\n        const shouldShowLeftDots = leftSiblingIndex > 2\r\n        const shouldShowRightDots = rightSiblingIndex < count - 2\r\n\r\n        const firstPageIndex = 1\r\n        const lastPageIndex = count\r\n\r\n        //Case 2: Слева нет точек, но справа есть:\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            const leftItemCount = 3 + 2 * siblings\r\n            const leftRange = range(1, leftItemCount)\r\n\r\n            return [...leftRange, DOTS, count]\r\n        }\r\n\r\n        //case 3: Справа нет точек, но слева есть:\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n            const rightItemCount = 3 + 2 * siblings\r\n            const rightRange = range(count - rightItemCount + 1, count)\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange]\r\n        }\r\n        //case 4: Точки с обеих сторон:\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            const middleRange = range(leftSiblingIndex, rightSiblingIndex)\r\n\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\r\n        }\r\n    }, [siblings, page, count]) as PaginationRange\r\n\r\n    const lastPage = paginationRange.at(-1)\r\n\r\n    const isFirstPage = page === 1\r\n    const isLastPage = page === lastPage\r\n\r\n    const handleNextPageClicked = useCallback(() => {\r\n        onChange(page + 1)\r\n    }, [page, onChange])\r\n\r\n    const handlePreviousPageClicked = useCallback(() => {\r\n        onChange(page - 1)\r\n    }, [page, onChange])\r\n\r\n    function handleMainPageClicked(pageNumber: number) {\r\n        return () => onChange(pageNumber)\r\n    }\r\n\r\n    return {\r\n        paginationRange,            // список номеров и \"...\" для отрисовки\r\n        handleMainPageClicked,      // клик по номеру страницы\r\n        handleNextPageClicked,      // клик \"вперёд\"\r\n        handlePreviousPageClicked,  // клик \"назад\"\r\n        isFirstPage,                // текущая — первая?\r\n        isLastPage                  // текущая — последняя?\r\n    }\r\n}","import {FC} from \"react\";\r\nimport {classNames, PerPageSelectProps} from \"@/components/pagination/paginationTypes\";\r\nimport {Selectbox} from \"@/components\";\r\n\r\nexport const PerPageSelect: FC<PerPageSelectProps> = ({onPerPageChange, perPage, perPageOptions}) => {\r\n    const selectOptions = perPageOptions.map(value => ({\r\n        label: value.toString(),\r\n        value,\r\n    }))\r\n\r\n    return (\r\n        <div className={classNames.selectBox}>\r\n            Show\r\n            <Selectbox\r\n                variant={'pagination'}\r\n                className={classNames.selectBox}\r\n                onValueChange={(val) => onPerPageChange(Number(val))}\r\n                options={selectOptions}\r\n                value={perPage}\r\n            />\r\n            on page\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC} from \"react\";\r\nimport {PrevButton} from \"@/components/pagination/buttonsGroup/PrevButton\";\r\nimport {NextButton} from \"@/components/pagination/buttonsGroup/NextButton\";\r\nimport {classNames, PaginationProps} from \"@/components/pagination/paginationTypes\";\r\nimport {MainPaginationButtons} from \"@/components/pagination/buttonsGroup/MainPaginationButtons\";\r\nimport {usePagination} from \"@/components/pagination/usePagination\";\r\nimport {PerPageSelect} from \"@/components/pagination/PerPageSelect\";\r\n\r\nexport const Pagination: FC<PaginationProps> = ({\r\n                                                    count,\r\n                                                    onChange,\r\n                                                    onPerPageChange,\r\n                                                    page,\r\n                                                    perPage = null,\r\n                                                    perPageOptions,\r\n                                                    siblings,\r\n                                                }) => {\r\n    const {\r\n        handleMainPageClicked,\r\n        handleNextPageClicked,\r\n        handlePreviousPageClicked,\r\n        isFirstPage,\r\n        isLastPage,\r\n        paginationRange,\r\n    } = usePagination({\r\n        count,\r\n        onChange,\r\n        page,\r\n        siblings,\r\n    })\r\n\r\n    const showPerPageSelect = !!perPage && !!perPageOptions && !!onPerPageChange\r\n\r\n    return (\r\n        <div className={classNames.root}>\r\n            <div className={classNames.container}>\r\n                <PrevButton disabled={isFirstPage} onClick={handlePreviousPageClicked} size={16}/>\r\n                <MainPaginationButtons\r\n                    currentPage={page}\r\n                    onClick={handleMainPageClicked}\r\n                    paginationRange={paginationRange}\r\n                />\r\n                <NextButton disabled={isLastPage} onClick={handleNextPageClicked} size={16}/>\r\n            </div>\r\n\r\n            {showPerPageSelect && (\r\n                <PerPageSelect\r\n                    {...{\r\n                        onPerPageChange,\r\n                        perPage,\r\n                        perPageOptions,\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":["Alert","children","variant","onClose","withCloseIcon","fullWidth","isOpen","rest","classNames","clsx","s","useEffect","timerId","jsx","jsxs","UniversalIcon","buttonVariant","Button","as","className","Component","Card","size","styles","Checkbox","label","idProp","disabled","props","RadixCheckbox","CheckIcon","SelectItem","React","forwardedRef","Select","name","dataStatic","width","height","svgElement","setSvgElement","res","svgString","options","domNode","el","attribs","key","reactKey","_","letter","parsed","parse","Selectbox","placeholder","value","onValueChange","onOpenChange","selectedOption","opt","ChevronDownIcon","option","Header","isAuth","isProcessingAuth","localization","notificationCount","convertNumber","Fragment","Input","id","inputType","errorText","required","showPassword","setShowPassword","useState","containerClassNames","isPassword","isSearch","isLocation","currentInputType","variants","Radio","defaultValue","RadioGroup","ReCaptcha","isCaptchaPassed","setCaptchaToken","siteKey","submitHandler","token","ReCAPTCHA","textAreaVariant","TextAreaComponent","error","buildFormatLongFn","args","buildLocalizeFn","context","valuesArray","defaultWidth","index","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","findIndex","pattern","findKey","object","predicate","array","buildMatchPatternFn","parseResult","formatDistanceLocale","formatDistance","count","result","tokenValue","formatRelativeLocale","formatRelative","_date","_baseDate","_options","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","dateFormats","timeFormats","dateTimeFormats","formatLong","enGB","Calendar","onChange","modifiers","date","DayPicker","DatePicker","hasError","inputId","open","setOpen","getDisplayValue","range","format","triggerClass","Popover","TabsComponent","tabs","Tabs","selected","PrevButton","onClick","NextButton","PageButton","page","Dots","MainPaginationButtons","currentPage","paginationRange","isSelected","start","end","length","idx","DOTS","usePagination","siblings","useMemo","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","rightItemCount","rightRange","middleRange","lastPage","isFirstPage","isLastPage","handleNextPageClicked","useCallback","handlePreviousPageClicked","handleMainPageClicked","pageNumber","PerPageSelect","onPerPageChange","perPage","perPageOptions","selectOptions","val","Pagination","showPerPageSelect"],"mappings":"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","x_google_ignoreList":[12,13,14,15,16,17,18,19,20,21]}